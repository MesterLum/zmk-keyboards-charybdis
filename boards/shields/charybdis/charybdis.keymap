#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4


/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };
    conditional_layers {
      compatible = "zmk,conditional-layers";
              tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                     &kp N6 &kp N7   &kp N8    &kp N9  &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                      &kp Y  &kp U    &kp I     &kp O   &kp P    &kp BACKSPACE
&kp LCTRL HRML(A,  S,   D,    F)          &kp G                      &kp H  HRMR(J,   K,    L,    SEMI)         &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B                      &kp N  &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                        &mo 1 &kp SPACE   &kp LGUI                   &kp RGUI  &kp RETURN &mo 2
                              &kp LALT    &caps_word                 &kp PRINTSCREEN  &kp RALT 
            >;

        };

        raise_layer {
            display-name = "Raise";
            bindings = <
&kp TILDE &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&trans    &kp C_PREVIOUS   &kp C_PP   &kp C_NEXT  &trans  &trans     &trans      &trans    &trans    &trans   &trans    &trans
&trans    &kp C_VOL_DN   &kp C_VOL_UP &kp C_MUTE  &trans  &trans     &kp LEFT    &kp DOWN  &kp UP   &kp RIGHT &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
                        &trans  &trans  &trans                       &trans      &trans    &trans
                        &bootloader  &sys_reset                      &trans      &trans        
            >;
        };

        lower_layer {
            display-name = "Lower";
            bindings = <
&kp GRAVE  &kp EXCL &kp AT &kp HASH &kp DOLLAR   &kp PRCNT           &kp CARET &kp AMPS  &kp ASTRK &kp LPAR  &kp RPAR  &kp TILDE
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&trans    &trans &kp UNDER &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &kp DQT
&trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC  &kp RBRC            &kp LBKT &kp RBKT     &trans    &trans   &kp BSLH    &kp PIPE
                        &trans  &trans  &trans                       &trans      &trans    &trans
                                &trans  &trans                       &bootloader &sys_reset          
            >;
        };
        system_layer {
            display-name = "System";
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
&trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
                        &trans  &trans  &trans                       &trans      &trans    &trans
                                &trans  &trans                       &trans      &trans          
            >;
        };
    };
};
